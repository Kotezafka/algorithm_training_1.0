"""
C. Телефонные номера

Ограничение времени	1 секунда
Ограничение памяти	64 Мб
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt

Телефонные номера в адресной книге мобильного телефона имеют один из следующих форматов:
+7<код><номер>,
8<код><номер>,
<номер>, где <номер> — это семь цифр, а <код> — это три цифры или три цифры в круглых скобках.

Если код не указан, то считается, что он равен 495. Кроме того, в записи телефонного
номера может стоять знак “-” между любыми двумя цифрами (см. пример). На данный момент
в адресной книге телефона Васи записано всего три телефонных номера, и он хочет записать
туда еще один. Но он не может понять, не записан ли уже такой номер в телефонной книге.
Помогите ему! Два телефонных номера совпадают, если у них равны коды и равны номера.
Например, +7(916)0123456 и 89160123456 — это один и тот же номер.

Формат ввода
В первой строке входных данных записан номер телефона, который Вася хочет добавить
в адресную книгу своего телефона. В следующих трех строках записаны три номера телефонов,
которые уже находятся в адресной книге телефона Васи. Гарантируется, что каждая из записей
соответствует одному из трех приведенных в условии форматов.

Формат вывода
Для каждого телефонного номера в адресной книге выведите YES (заглавными буквами),
если он совпадает с тем телефонным номером, который Вася хочет добавить
в адресную книгу или NO (заглавными буквами) в противном случае.

Пример 1
Ввод
8(495)430-23-97
+7-4-9-5-43-023-97
4-3-0-2-3-9-7
8-495-430

Вывод
YES
YES
NO


Пример 2
Ввод
86406361642
83341994118
86406361642
83341994118

Вывод
NO
YES
NO


Пример 3
Ввод
+78047952807
+78047952807
+76147514928
88047952807

Вывод
YES
NO
YES
"""


def entering_nums():
    for _ in range(4):
        n = input()
        yield n


def conversion_to_form(arr_n):
    new_arr = []

    for n in arr_n:
        p = []
        for i in n:
            if f'{i}'.isdigit():
                p.append(i)

        curr_p = ''.join(p)
        if len(curr_p) == 11:
            new_arr.append(curr_p[1:])

        else:
            new_arr.append(curr_p)

    # print(new_arr)

    add_code = '495'

    for e, n in enumerate(new_arr):
        if len(n) < 10:
            new_arr[e] = add_code + n

    return new_arr


def check_same_number(new_arr):
    for n in new_arr[1:]:
        answer = 'YES'
        if n != new_arr[0]:
            answer = 'NO'

        print(answer)


def main():
    curr_n, n1, n2, n3 = entering_nums()

    arr_n = [curr_n, n1, n2, n3]
    # print(arr_n)
    new_arr = conversion_to_form(arr_n)

    check_same_number(new_arr)


if __name__ == '__main__':
    main()